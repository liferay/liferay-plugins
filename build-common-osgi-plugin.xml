<?xml version="1.0"?>
<!DOCTYPE project>

<project name="build-common-osgi-plugin" xmlns:antelope="antlib:ise.antelope.tasks">
	<import file="build-common-plugin.xml" />

	<antelope:stringutil string="${plugin.file}" property="plugin.file">
		<antelope:replace regex="\.war" replacement="\.jar" />
	</antelope:stringutil>

	<if>
		<available file="src" />
		<then>
			<property name="osgi.plugin.classes.dir" value="classes" />
			<property name="osgi.plugin.source.dir" value="src" />
		</then>
		<else>
			<property name="osgi.plugin.classes.dir" value="docroot/WEB-INF/classes" />
			<property name="osgi.plugin.source.dir" value="docroot/WEB-INF/src" />
		</else>
	</if>

	<property name="plugin-lib.classpath.path" refid="plugin-lib.classpath" />

	<path id="plugin-lib.classpath">
		<path refid="portal.classpath" />
		<fileset dir="lib" erroronmissingdir="false" includes="*.jar" />
		<pathelement path="${plugin-lib.classpath.path}" />
	</path>

	<var name="plugin-lib.classpath.path" unset="true" />

	<taskdef classpathref="portal.classpath" resource="aQute/bnd/ant/taskdef.properties" />

	<macrodef name="manifest-helper">
		<attribute name="analyze" default="false" />

		<sequential>
			<taskdef
				classname="com.liferay.util.ant.ManifestHelperTask"
				classpathref="plugin.classpath"
				name="liferay-manifest-helper"
			/>

			<liferay-manifest-helper
				analyze="@{analyze}"
				classpathref="plugin.classpath"
				projectDirPropertyName="sdk.dir"
			/>
		</sequential>
	</macrodef>

	<macrodef name="baseline-jar-macro">
		<attribute name="bndRootFile" />
		<attribute name="file" />
		<attribute name="outputPath" />
		<attribute name="rootProjectDir" />
		<attribute name="sourcePath" />

		<sequential>
			<taskdef
				classname="com.liferay.util.ant.bnd.BaselineJarTask"
				classpathref="plugin.classpath"
				name="baseline-jar"
			/>

			<manifest-helper />

			<bndexpand propertyfile="@{bndRootFile}" />

			<baseline-jar
				bndRootFile="@{bndRootFile}"
				file="@{file}"
				outputPath="@{outputPath}"
				sourcePath="@{sourcePath}"
			>
				<classpath>
					<pathelement location="@{sourcePath}/classes" />
				</classpath>
			</baseline-jar>
		</sequential>
	</macrodef>

	<target name="clean">
		<delete dir="${osgi.plugin.classes.dir}" />

		<antcall target="build-common-plugin.clean" />
	</target>

	<target name="compile">
		<antcall target="compile-import-shared" />

		<mkdir dir="${osgi.plugin.classes.dir}" />

		<antcall target="compile-java">
			<param name="javac.classpathref" value="plugin.classpath" />
			<param name="javac.destdir" value="${osgi.plugin.classes.dir}" />
			<param name="javac.srcdir" value="${osgi.plugin.source.dir}" />
		</antcall>
	</target>

	<target name="deploy" depends="jar,deploy-dependencies">
		<copy file="${plugin.file}" todir="${auto.deploy.dir}" />
	</target>

	<target name="deploy-dependencies">
		<copy failonerror="false" todir="${auto.deploy.dir}">
			<fileset dir="lib" includes="${osgi.dependencies}" />
		</copy>
	</target>

	<target name="jar" depends="compile">
		<if>
			<not>
				<uptodate targetfile="${plugin.file}">
					<srcfiles dir="${osgi.plugin.classes.dir}" includes="**/*.*" />
				</uptodate>
			</not>
			<then>
				<baseline-jar-macro
					bndRootFile="${sdk.dir}/common.bnd"
					file="bnd.bnd"
					outputPath="."
					rootProjectDir="${sdk.dir}"
					sourcePath="."
				/>
			</then>
		</if>
	</target>

	<target name="manifest">
		<if>
			<not>
				<available file="${osgi.plugin.classes.dir}/META-INF/MANIFEST.MF" />
			</not>
			<then>
				<manifest-helper analyze="true" />

				<mkdir dir="${osgi.plugin.classes.dir}/META-INF" />

				<tstamp>
					<format property="build.time" pattern="EEE MMM d HH:mm:ss z yyyy" />
				</tstamp>

				<manifest file="${osgi.plugin.classes.dir}/META-INF/MANIFEST.MF">
					<attribute name="Bundle-ManifestVersion" value="2" />
					<attribute name="Bundle-RequiredExecutionEnvironment" value="J2SE-1.5" />
					<attribute name="Bundle-Vendor" value="${release.info.vendor}" />
					<attribute name="Bundle-Version" value="${release.info.version}" />
					<attribute name="Export-Package" value="${export.packages}" />
					<attribute name="Import-Package" value="${import.packages}" />
					<attribute name="Javac-Compiler" value="${javac.compiler}" />
					<attribute name="Javac-Debug" value="${javac.debug}" />
					<attribute name="Javac-Deprecation" value="${javac.deprecation}" />
					<attribute name="Javac-Encoding" value="${javac.encoding}" />
				</manifest>

				<if>
					<and>
						<isset property="manifest.bundle.name" />
						<isset property="manifest.bundle.symbolic.name" />
					</and>
					<then>
						<manifest file="${osgi.plugin.classes.dir}/META-INF/MANIFEST.MF" mode="update">
							<attribute name="Bundle-Name" value="${manifest.bundle.name}" />
							<attribute name="Bundle-SymbolicName" value="${manifest.bundle.symbolic.name}" />
						</manifest>
					</then>
				</if>

				<if>
					<isset property="manifest.premain.class" />
					<then>
						<manifest file="${osgi.plugin.classes.dir}/META-INF/MANIFEST.MF" mode="update">
							<attribute name="Can-Redefine-Classes" value="${manifest.can.redefine.classes}" />
							<attribute name="Can-Retransform-Classes" value="${manifest.can.retransform.classes}" />
							<attribute name="Premain-Class" value="${manifest.premain.class}" />
						</manifest>
					</then>
				</if>
			</then>
		</if>
	</target>

	<target name="war">
		<antcall target="jar" />
	</target>
</project>