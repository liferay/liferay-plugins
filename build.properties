##
## DO NOT EDIT THIS FILE.
##
## To update the properties of this file, create a separate properties file
## named "build.${user.name}.properties" with the properties to overwrite.
##

##
## Application Server
##

    #
    # Specify the application server type.
    #
    #app.server.type=glassfish
    #app.server.type=jboss
    #app.server.type=jetty
    #app.server.type=jonas
    #app.server.type=resin
    app.server.type=tomcat
    #app.server.type=weblogic
    #app.server.type=websphere

    #
    # Specify the application server parent directory.
    #
    app.server.parent.dir=${sdk.dir}/../bundles

    #
    # Specify the paths to an unzipped Glassfish bundle.
    #
    app.server.glassfish.dir=${app.server.parent.dir}/glassfish-3.1.2.2
    app.server.glassfish.deploy.dir=${app.server.glassfish.dir}/autodeploy
    app.server.glassfish.lib.global.dir=${app.server.glassfish.dir}/domains/domain1/lib
    app.server.glassfish.portal.dir=${app.server.glassfish.dir}/domains/domain1/applications/liferay-portal

    #
    # Specify the paths to an unzipped JBoss bundle.
    #
    app.server.jboss.dir=${app.server.parent.dir}/jboss-7.1.1
    app.server.jboss.deploy.dir=${app.server.jboss.dir}/standalone/deployments
    app.server.jboss.lib.global.dir=${app.server.jboss.dir}/modules/com/liferay/portal/main
    app.server.jboss.portal.dir=${app.server.jboss.dir}/standalone/deployments/ROOT.war

    #
    # Uncomment the following line to specify the paths to an unzipped JBoss
    # EAP 6.1.x bundle instead of JBoss 7.1.x.
    #
    #app.server.jboss.dir=${app.server.parent.dir}/jboss-eap-6.1

    #
    # Uncomment the following line to specify the paths to an unzipped JBoss
    # Wildfly 8.1.0 bundle instead of JBoss 7.1.x.
    #
    #app.server.jboss.dir=${app.server.parent.dir}/jboss-wildfly-8.1.0

    #
    # Specify the paths to an unzipped Jetty bundle.
    #
    app.server.jetty.dir=${app.server.parent.dir}/jetty-8.1.10
    app.server.jetty.deploy.dir=${app.server.jetty.dir}/webapps
    app.server.jetty.lib.global.dir=${app.server.jetty.dir}/lib/ext/liferay
    app.server.jetty.portal.dir=${app.server.jetty.dir}/webapps/root

    #
    # Specify the paths to an unzipped JOnAS bundle.
    #
    app.server.jonas.dir=${app.server.parent.dir}/jonas-5.2.3
    app.server.jonas.deploy.dir=${app.server.jonas.dir}/deploy
    app.server.jonas.lib.global.dir=${app.server.jonas.dir}/lib/ext
    app.server.jonas.portal.dir=${app.server.jonas.dir}/deploy/liferay-portal

    #
    # Specify the paths to an unzipped Resin bundle.
    #
    app.server.resin.dir=${app.server.parent.dir}/resin-4.0.33
    app.server.resin.deploy.dir=${app.server.resin.dir}/webapps
    app.server.resin.lib.global.dir=${app.server.resin.dir}/ext-lib
    app.server.resin.portal.dir=${app.server.resin.dir}/webapps/ROOT

    #
    # Specify the paths to an unzipped tc Server bundle.
    #
    app.server.tcserver.dir=${app.server.parent.dir}/tc-server-2.6.4
    app.server.tcserver.deploy.dir=${app.server.tcserver.dir}/liferay/webapps
    app.server.tcserver.lib.global.dir=${app.server.tcserver.dir}/liferay/lib
    app.server.tcserver.portal.dir=${app.server.tcserver.dir}/liferay/webapps/ROOT

    #
    # Specify the paths to an unzipped Tomcat bundle.
    #
    app.server.tomcat.dir=${app.server.parent.dir}/tomcat-7.0.42
    app.server.tomcat.deploy.dir=${app.server.tomcat.dir}/webapps
    app.server.tomcat.lib.global.dir=${app.server.tomcat.dir}/lib/ext
    app.server.tomcat.manager.user=tomcat
    app.server.tomcat.manager.password=tomcat
    app.server.tomcat.portal.dir=${app.server.tomcat.dir}/webapps/ROOT

    #
    # Specify the paths to a WebLogic domain with Liferay installed.
    #
    app.server.weblogic.dir=${app.server.parent.dir}/weblogic-12.1.2
    app.server.weblogic.deploy.dir=${app.server.weblogic.dir}/domains/liferay/autodeploy
    app.server.weblogic.lib.global.dir=${app.server.weblogic.dir}/domains/liferay/lib
    app.server.weblogic.portal.dir=${app.server.weblogic.dir}/domains/liferay/autodeploy/ROOT

    #
    # Specify the paths to a WebSphere profile with Liferay installed.
    #
    app.server.websphere.dir=${app.server.parent.dir}/websphere-7.0
    app.server.websphere.deploy.dir=${app.server.websphere.dir}/profiles/liferay/wsadmin-deploy
    app.server.websphere.lib.global.dir=${app.server.websphere.dir}/lib/ext
    app.server.websphere.portal.dir=${app.server.websphere.dir}/profiles/liferay/installedApps/liferay-cell/liferay-portal.ear/liferay-portal.war

##
## Auto Deploy
##

    #
    # Plugins will be deployed to this directory. Make sure that Liferay is
    # also set to scan this directory.
    #
    auto.deploy.dir=${app.server.parent.dir}/deploy

    #
    # Set this to true if deployed WARs are unpacked. Set this to false your
    # application server has concurrency issues with deploying large WARs.
    #
    auto.deploy.unpack.war=true

    #
    # Set this to true if you want the deployer to rename portlet.xml to
    # portlet-custom.xml. This is only needed when deploying the portal on
    # WebSphere 6.1.x with a version before 6.1.0.7 because WebSphere's portlet
    # container will try to process a portlet at the same time that Liferay is
    # trying to process a portlet.
    #
    auto.deploy.custom.portlet.xml=false

##
## Baseline JAR
##

    baseline.jar.bnddir.name=.bnd

    baseline.jar.report.level=diff
    #baseline.jar.report.level=off
    #baseline.jar.report.level=persist
    #baseline.jar.report.level=standard

    baseline.jar.report.only.dirty.packages=true

    baseline.jar.reports.dir.name=baseline-reports

    -baseline=
    -baselinerepo=localrepo
    -fixupmessages: "While setting properties ...";is:=ignore
    -jsp: *.jsp,*.jspf
    -metatype: *
    -plugin=\
        aQute.bnd.deployer.repository.LocalIndexedRepo;\
            local=${sdk.dir}/.bnd/localrepo;\
            name=localrepo;\
            phase=any;\
            type=R5,\
        aQute.bnd.deployer.repository.FixedIndexedRepo;\
            cache=${sdk.dir}/.bnd/remoterepo;\
            locations='http://obr.liferay.com/r5/liferay-portal/index.xml.gz';\
            name=remoterepo;\
            phase=any;\
            type=R5,\
        com.liferay.ant.bnd.plugin.JspAnalyzerPlugin,\
        com.liferay.ant.bnd.plugin.SassAnalyzerPlugin
    -pluginpath=${sdk.dir}/osgi/lib/plugin/bnd-repository.jar
    -releaserepo=localrepo
    -sass: *

##
## BND JSP Support
##

    #
    # When creating bundles which contain JSPs, simply add ${bnd.jsp.support.imports} as
    # part of the package imports in the bnd file.
    #
    bnd.jsp.support.imports=\
        ${bnd.jsp.support.imports.javax.el},\
        ${bnd.jsp.support.imports.javax.servlet},\
        ${bnd.jsp.support.imports.javax.servlet.jsp},\
        ${bnd.jsp.support.imports.javax.servlet.jsp.jstl},\
        ${bnd.jsp.support.imports.org.apache.jasper},\
        ${bnd.jsp.support.imports.org.apache.taglibs.standard},\
        ${bnd.jsp.support.imports.xml},\
        javax.tools

    bnd.jsp.support.imports.javax.el=\
        com.sun.el;version='${bnd.jsp.support.version.javax.el}',\
        com.sun.el.lang;version='${bnd.jsp.support.version.javax.el}',\
        com.sun.el.parser;version='${bnd.jsp.support.version.javax.el}',\
        com.sun.el.stream;version='${bnd.jsp.support.version.javax.el}',\
        com.sun.el.util;version='${bnd.jsp.support.version.javax.el}',\
        javax.el;version='${bnd.jsp.support.version.javax.el}'

    bnd.jsp.support.imports.javax.servlet=\
        javax.servlet;version='${bnd.jsp.support.version.javax.servlet}',\
        javax.servlet.annotation;version='${bnd.jsp.support.version.javax.servlet}',\
        javax.servlet.descriptor;version='${bnd.jsp.support.version.javax.servlet}',\
        javax.servlet.http;version='${bnd.jsp.support.version.javax.servlet}',\
        javax.servlet.resources

    bnd.jsp.support.imports.javax.servlet.jsp=\
        javax.servlet.jsp;version='${bnd.jsp.support.version.javax.servlet.jsp}',\
        javax.servlet.jsp.el;version='${bnd.jsp.support.version.javax.servlet.jsp}',\
        javax.servlet.jsp.tagext;version='${bnd.jsp.support.version.javax.servlet.jsp}'

    bnd.jsp.support.imports.javax.servlet.jsp.jstl=\
        javax.servlet.jsp.jstl.core;version='${bnd.jsp.support.version.javax.servlet.jsp.jstl}',\
        javax.servlet.jsp.jstl.fmt;version='${bnd.jsp.support.version.javax.servlet.jsp.jstl}',\
        javax.servlet.jsp.jstl.sql;version='${bnd.jsp.support.version.javax.servlet.jsp.jstl}',\
        javax.servlet.jsp.jstl.tlv;version='${bnd.jsp.support.version.javax.servlet.jsp.jstl}'

    bnd.jsp.support.imports.org.apache.jasper=\
        org.apache.jasper;version='${bnd.jsp.support.version.org.apache.jasper}',\
        org.apache.jasper.compiler;version='${bnd.jsp.support.version.org.apache.jasper}',\
        org.apache.jasper.compiler.tagplugin;version='${bnd.jsp.support.version.org.apache.jasper}',\
        org.apache.jasper.resources;version='${bnd.jsp.support.version.org.apache.jasper}',\
        org.apache.jasper.runtime;version='${bnd.jsp.support.version.org.apache.jasper}',\
        org.apache.jasper.security;version='${bnd.jsp.support.version.org.apache.jasper}',\
        org.apache.jasper.servlet;version='${bnd.jsp.support.version.org.apache.jasper}',\
        org.apache.jasper.tagplugins.jstl;version='${bnd.jsp.support.version.org.apache.jasper}',\
        org.apache.jasper.xmlparser;version='${bnd.jsp.support.version.org.apache.jasper}',\
        org.glassfish.jsp.api;version='${bnd.jsp.support.version.org.apache.jasper}'

    bnd.jsp.support.imports.org.apache.taglibs.standard=\
        org.apache.taglibs.standard;version='${bnd.jsp.support.version.org.apache.taglibs.standard}',\
        org.apache.taglibs.standard.extra.spath;version='${bnd.jsp.support.version.org.apache.taglibs.standard}',\
        org.apache.taglibs.standard.functions;version='${bnd.jsp.support.version.org.apache.taglibs.standard}',\
        org.apache.taglibs.standard.lang.jstl;version='${bnd.jsp.support.version.org.apache.taglibs.standard}',\
        org.apache.taglibs.standard.lang.jstl.parser;version='${bnd.jsp.support.version.org.apache.taglibs.standard}',\
        org.apache.taglibs.standard.lang.jstl.test;version='${bnd.jsp.support.version.org.apache.taglibs.standard}',\
        org.apache.taglibs.standard.lang.jstl.test.beans;version='${bnd.jsp.support.version.org.apache.taglibs.standard}',\
        org.apache.taglibs.standard.lang.support;version='${bnd.jsp.support.version.org.apache.taglibs.standard}',\
        org.apache.taglibs.standard.resources;version='${bnd.jsp.support.version.org.apache.taglibs.standard}',\
        org.apache.taglibs.standard.tag.common.core;version='${bnd.jsp.support.version.org.apache.taglibs.standard}',\
        org.apache.taglibs.standard.tag.common.fmt;version='${bnd.jsp.support.version.org.apache.taglibs.standard}',\
        org.apache.taglibs.standard.tag.common.sql;version='${bnd.jsp.support.version.org.apache.taglibs.standard}',\
        org.apache.taglibs.standard.tag.common.xml;version='${bnd.jsp.support.version.org.apache.taglibs.standard}',\
        org.apache.taglibs.standard.tag.el.core;version='${bnd.jsp.support.version.org.apache.taglibs.standard}',\
        org.apache.taglibs.standard.tag.el.fmt;version='${bnd.jsp.support.version.org.apache.taglibs.standard}',\
        org.apache.taglibs.standard.tag.el.sql;version='${bnd.jsp.support.version.org.apache.taglibs.standard}',\
        org.apache.taglibs.standard.tag.el.xml;version='${bnd.jsp.support.version.org.apache.taglibs.standard}',\
        org.apache.taglibs.standard.tag.rt.core;version='${bnd.jsp.support.version.org.apache.taglibs.standard}',\
        org.apache.taglibs.standard.tag.rt.fmt;version='${bnd.jsp.support.version.org.apache.taglibs.standard}',\
        org.apache.taglibs.standard.tag.rt.sql;version='${bnd.jsp.support.version.org.apache.taglibs.standard}',\
        org.apache.taglibs.standard.tag.rt.xml;version='${bnd.jsp.support.version.org.apache.taglibs.standard}',\
        org.apache.taglibs.standard.tei;version='${bnd.jsp.support.version.org.apache.taglibs.standard}',\
        org.apache.taglibs.standard.tlv;version='${bnd.jsp.support.version.org.apache.taglibs.standard}'

    bnd.jsp.support.imports.xml=\
        javax.xml.parsers,\
        javax.xml.transform,\
        javax.xml.transform.dom,\
        javax.xml.transform.stream,\
        javax.xml.validation,\
        org.w3c.dom,\
        org.w3c.dom.ls,\
        org.xml.sax,\
        org.xml.sax.ext,\
        org.xml.sax.helpers

    bnd.jsp.support.version.javax.el=[3.0.0,4.0)
    bnd.jsp.support.version.javax.servlet=[2.6.0,4.0.0)
    bnd.jsp.support.version.javax.servlet.jsp=[2.3.2,3.0)
    bnd.jsp.support.version.javax.servlet.jsp.jstl=[1.2.1,2.0)
    bnd.jsp.support.version.org.apache.jasper=[2.3.2,3.0)
    bnd.jsp.support.version.org.apache.taglibs.standard=[1.2.3,2.0)

##
## Clean
##

    clean.delete.ivy.md5=false
    clean.delete.lib=false

##
## Compiler
##

    ant.build.javac.source=1.7
    ant.build.javac.target=1.7

    #javac.compiler=com.google.errorprone.ErrorProneAntCompilerAdapter
    javac.compiler=modern
    #javac.compiler=org.eclipse.jdt.core.JDTCompilerAdapter

    javac.debug=on
    javac.deprecation=off
    javac.encoding=ISO-8859-1
    javac.nowarn=on

##
## Database
##

    #
    # Set the database name used by the SQL scripts.
    #
    database.name=lportal

    #
    # Set the database server types to build SQL scripts for.
    #
    database.types=db2,derby,firebird,hypersonic,informix,ingres,interbase,jdatastore,mysql,oracle,postgresql,sap,sqlserver,sybase
    #database.types=mysql

##
## Extension Environment
##

    #ext.work.dir=

##
## Ivy
##

    ivy.cache.ttl.default=eternal
    ivy.custom.settings.file=${sdk.dir}/ivy-settings.xml
    ivy.home=${sdk.dir}/.ivy

    #ivy.jar.url=http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.version}/ivy-${ivy.version}.jar
    ivy.jar.url=http://cdn.repository.liferay.com/nexus/content/repositories/liferay-snapshots-ce/com/liferay/org.apache.ivy/${ivy.version}/org.apache.ivy-${ivy.version}.jar

    ivy.pom.developer.name=Brian Wing Shun Chan
    ivy.pom.developer.organization=Liferay, Inc.
    ivy.pom.developer.organizationUrl=http://www.liferay.com
    ivy.pom.license.name=LGPL 2.1
    ivy.pom.license.url=http://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt
    ivy.pom.scm.connection=scm:git:git@github.com:liferay/liferay-plugins.git
    ivy.pom.scm.developerConnection=scm:git:git@github.com:liferay/liferay-plugins.git
    ivy.pom.scm.url=http://github.com/liferay/liferay-plugins
    ivy.resolve.transitive.dependencies=true
    ivy.resolve.transitive.dependencies.test=true

    #ivy.version=2.4.0
    ivy.version=2.4.0.LIFERAY-PATCHED-1-SNAPSHOT

##
## JMX
##

    jmx.remote.port=8099

##
## JRebel
##

    #
    # Set the directory that will be used to generate a plugin's JRebel
    # configuraton file. Not specifying a directory means that the generated
    # JRebel configuration file will be placed in a plugin's compiled classes
    # output directory. This is also the directory that JRebel will use to look
    # for updated classes.
    #
    #jrebel.plugin.classes.dir=

##
## JUnit
##

    junit.debug.jpda=-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=y

    junit.halt.on.failure=false
    junit.java.mx=1024m
    junit.java.maxpermsize=256m
    junit.jvm=java
    junit.test.excludes=(?!)
    junit.whip.jar=dependencies/com.liferay.whip/lib/com.liferay.whip.jar
    junit.whip.excludes=.*Test,.*Test\\$.*,.*\\$Proxy.*,com/liferay/whip/.*
    junit.whip.includes=com/liferay/.*

##
## Libraries
##

    required.portal.jars=commons-logging.jar,log4j.jar,util-bridges.jar,util-java.jar,util-taglib.jar

##
## Liferay Home
##

    liferay.home=${app.server.parent.dir}/..

##
## Microsoft Translator
##

    #
    # Set the client ID and client secret values for Microsoft Translation
    # integration. Subscription to the Microsoft Translator API on Azure
    # Marketplace is required. Basic subscriptions, up to 2 million characters a
    # month, are free. See http://msdn.microsoft.com/en-us/library/hh454950 for
    # more information.
    #
    microsoft.translator.client.id=
    microsoft.translator.client.secret=

##
## Module Framework
##

    #
    # Set the directory which will form the base path of the module framework.
    #
    module.framework.base.dir=${liferay.home}/osgi

##
## NodeJS
##

    nodejs.npm.url=http://nodejs.org/dist/npm/npm-${nodejs.npm.version}.zip
	nodejs.npm.version=1.4.9

    #nodejs.url=

    nodejs.url[linux32]=http://nodejs.org/dist/v${nodejs.version}/node-v${nodejs.version}-linux-x86.tar.gz
    nodejs.url[linux64]=http://nodejs.org/dist/v${nodejs.version}/node-v${nodejs.version}-linux-x64.tar.gz
    nodejs.url[osx32]=http://nodejs.org/dist/v${nodejs.version}/node-v${nodejs.version}-darwin-x86.tar.gz
    nodejs.url[osx64]=http://nodejs.org/dist/v${nodejs.version}/node-v${nodejs.version}-darwin-x64.tar.gz
    nodejs.url[windows32]=http://nodejs.org/dist/v${nodejs.version}/node.exe
    nodejs.url[windows64]=http://nodejs.org/dist/v${nodejs.version}/x64/node.exe

    nodejs.version=0.10.35

##
## Operating Systems
##

    os.apple=Mac OS X
    os.unix=Linux,FreeBSD,Solaris,SunOS
    os.windows=Windows 95,Windows 98,Windows NT,Windows 2000,Windows 2003,Windows XP,Windows Vista,Windows 7

##
## PGP
##

    pgp.generator=
    pgp.keyname=auto
    pgp.passphrase=

##
## Plugins
##

    #
    # Set the excludes and includes attributes. These attributes are read when
    # you run "ant" from the hooks, layouttpl, portlets, shared, themes, or webs
    # directory. By default, the ant task will go through every subdirectory.
    # Setting these attributes can limit it to just the plugins you're working
    # on.
    #
    plugins.excludes=modules-admin-portlet
    plugins.includes=*

    #
    # Set the excludes and includes attributes for converting a bundle that has
    # the portal and a set of deployed plugins into an EAR file. The web
    # applications that match these attributes will be included into the
    # generated liferay-portal.ear via the command "ant ear".
    #
    # For example, if you are using Tomcat, then the directory specified in
    # the property "app.server.tomcat.deploy.dir" will point to
    # ${app.server.tomcat.dir}/webapps by default. Running "ant ear" will create
    # an EAR based on all the WARs in that directory with names that match the
    # excludes and includes from these two properties.
    #
    plugins.ear.excludes=
    plugins.ear.includes=tunnel-web

    #
    # Specify the path of the portal servlet context.
    #
    # Set this property if you deploy the portal to another path besides root.
    #
    plugins.ear.portal.context.path=/

    #
    # Set this to true to generate a source ZIP file when creating a plugin WAR
    # file.
    #
    plugins.src.zip.enabled=false

    #
    # Set this to true to optimize the size of plugin WAR files by not included
    # portal dependencies that will can injected at deploy time.
    #
    plugins.war.clean.portal.dependencies=true

    #
    # Set the excludes attributes to specify files that will be excluded from a
    # plugin WAR.
    #
    #plugins.war.excludes=**/WEB-INF/service/**,**/WEB-INF/src/**

##
## PMD
##

    pmd.cpd.minimun.token.count=100
    pmd.java.excludes=apps/**,tools/**
    pmd.java.includes=**/src/**/*.java
    pmd.java.ruleset=${sdk.dir}/dependencies/net.sourceforge.pmd/rulesets/java/standard-rules.xml
    pmd.output.console=true
    pmd.output.type=xml
    pmd.threads=2

##
## Sonatype
##

    sonatype.release.hostname=repository.liferay.com
    sonatype.release.password=
    sonatype.release.realm=Sonatype Nexus Repository Manager
    sonatype.release.url=https://repository.liferay.com/nexus/content/repositories/liferay-releases-ce
    sonatype.release.username=

    sonatype.snapshot.hostname=repository.liferay.com
    sonatype.snapshot.password=
    sonatype.snapshot.realm=Sonatype Nexus Repository Manager
    sonatype.snapshot.url=https://repository.liferay.com/nexus/content/repositories/liferay-snapshots-ce
    sonatype.snapshot.username=

##
## Spring Extender
##

    #
    # The time in seconds to wait for mandatory dependencies to be satisfied
    # before failing the creation of an application context.
    #
    spring.extender.time.to.wait=600

##
## Version
##

    #
    # Set the version of Liferay Portal that these plugins are designed for.
    #
    lp.version=7.0.0
    lp.version.file.suffix=
    lp.dependencies.version=7.0.0-SNAPSHOT
