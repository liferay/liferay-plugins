/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.share.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.kernel.util.Validator;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.util.PortalUtil;

import com.liferay.share.model.EntitySocialFeed;
import com.liferay.share.model.EntitySocialFeedModel;
import com.liferay.share.model.EntitySocialFeedSoap;
import com.liferay.share.service.persistence.EntitySocialFeedPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the EntitySocialFeed service. Represents a row in the &quot;share_EntitySocialFeed&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.liferay.share.model.EntitySocialFeedModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EntitySocialFeedImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see EntitySocialFeedImpl
 * @see com.liferay.share.model.EntitySocialFeed
 * @see com.liferay.share.model.EntitySocialFeedModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class EntitySocialFeedModelImpl extends BaseModelImpl<EntitySocialFeed>
	implements EntitySocialFeedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a entity social feed model instance should use the {@link com.liferay.share.model.EntitySocialFeed} interface instead.
	 */
	public static final String TABLE_NAME = "share_EntitySocialFeed";
	public static final Object[][] TABLE_COLUMNS = {
			{ "classNameId", Types.BIGINT },
			{ "classPK", Types.BIGINT },
			{ "feedClassNameId", Types.BIGINT },
			{ "feedClassPK", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table share_EntitySocialFeed (classNameId LONG not null,classPK LONG not null,feedClassNameId LONG not null,feedClassPK LONG not null,primary key (classNameId, classPK, feedClassNameId, feedClassPK))";
	public static final String TABLE_SQL_DROP = "drop table share_EntitySocialFeed";
	public static final String ORDER_BY_JPQL = " ORDER BY entitySocialFeed.id.classNameId ASC, entitySocialFeed.id.classPK ASC, entitySocialFeed.id.feedClassNameId ASC, entitySocialFeed.id.feedClassPK ASC";
	public static final String ORDER_BY_SQL = " ORDER BY share_EntitySocialFeed.classNameId ASC, share_EntitySocialFeed.classPK ASC, share_EntitySocialFeed.feedClassNameId ASC, share_EntitySocialFeed.feedClassPK ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.share.model.EntitySocialFeed"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.share.model.EntitySocialFeed"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.liferay.share.model.EntitySocialFeed"),
			true);
	public static final long CLASSNAMEID_COLUMN_BITMASK = 1L;
	public static final long CLASSPK_COLUMN_BITMASK = 2L;
	public static final long FEEDCLASSNAMEID_COLUMN_BITMASK = 4L;
	public static final long FEEDCLASSPK_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static EntitySocialFeed toModel(EntitySocialFeedSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		EntitySocialFeed model = new EntitySocialFeedImpl();

		model.setClassNameId(soapModel.getClassNameId());
		model.setClassPK(soapModel.getClassPK());
		model.setFeedClassNameId(soapModel.getFeedClassNameId());
		model.setFeedClassPK(soapModel.getFeedClassPK());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<EntitySocialFeed> toModels(
		EntitySocialFeedSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<EntitySocialFeed> models = new ArrayList<EntitySocialFeed>(soapModels.length);

		for (EntitySocialFeedSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.liferay.share.model.EntitySocialFeed"));

	public EntitySocialFeedModelImpl() {
	}

	@Override
	public EntitySocialFeedPK getPrimaryKey() {
		return new EntitySocialFeedPK(_classNameId, _classPK, _feedClassNameId,
			_feedClassPK);
	}

	@Override
	public void setPrimaryKey(EntitySocialFeedPK primaryKey) {
		setClassNameId(primaryKey.classNameId);
		setClassPK(primaryKey.classPK);
		setFeedClassNameId(primaryKey.feedClassNameId);
		setFeedClassPK(primaryKey.feedClassPK);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new EntitySocialFeedPK(_classNameId, _classPK, _feedClassNameId,
			_feedClassPK);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((EntitySocialFeedPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return EntitySocialFeed.class;
	}

	@Override
	public String getModelClassName() {
		return EntitySocialFeed.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("classNameId", getClassNameId());
		attributes.put("classPK", getClassPK());
		attributes.put("feedClassNameId", getFeedClassNameId());
		attributes.put("feedClassPK", getFeedClassPK());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long classNameId = (Long)attributes.get("classNameId");

		if (classNameId != null) {
			setClassNameId(classNameId);
		}

		Long classPK = (Long)attributes.get("classPK");

		if (classPK != null) {
			setClassPK(classPK);
		}

		Long feedClassNameId = (Long)attributes.get("feedClassNameId");

		if (feedClassNameId != null) {
			setFeedClassNameId(feedClassNameId);
		}

		Long feedClassPK = (Long)attributes.get("feedClassPK");

		if (feedClassPK != null) {
			setFeedClassPK(feedClassPK);
		}
	}

	@Override
	public String getClassName() {
		if (getClassNameId() <= 0) {
			return StringPool.BLANK;
		}

		return PortalUtil.getClassName(getClassNameId());
	}

	@Override
	public void setClassName(String className) {
		long classNameId = 0;

		if (Validator.isNotNull(className)) {
			classNameId = PortalUtil.getClassNameId(className);
		}

		setClassNameId(classNameId);
	}

	@JSON
	@Override
	public long getClassNameId() {
		return _classNameId;
	}

	@Override
	public void setClassNameId(long classNameId) {
		_columnBitmask |= CLASSNAMEID_COLUMN_BITMASK;

		if (!_setOriginalClassNameId) {
			_setOriginalClassNameId = true;

			_originalClassNameId = _classNameId;
		}

		_classNameId = classNameId;
	}

	public long getOriginalClassNameId() {
		return _originalClassNameId;
	}

	@JSON
	@Override
	public long getClassPK() {
		return _classPK;
	}

	@Override
	public void setClassPK(long classPK) {
		_columnBitmask |= CLASSPK_COLUMN_BITMASK;

		if (!_setOriginalClassPK) {
			_setOriginalClassPK = true;

			_originalClassPK = _classPK;
		}

		_classPK = classPK;
	}

	public long getOriginalClassPK() {
		return _originalClassPK;
	}

	@JSON
	@Override
	public long getFeedClassNameId() {
		return _feedClassNameId;
	}

	@Override
	public void setFeedClassNameId(long feedClassNameId) {
		_columnBitmask |= FEEDCLASSNAMEID_COLUMN_BITMASK;

		if (!_setOriginalFeedClassNameId) {
			_setOriginalFeedClassNameId = true;

			_originalFeedClassNameId = _feedClassNameId;
		}

		_feedClassNameId = feedClassNameId;
	}

	public long getOriginalFeedClassNameId() {
		return _originalFeedClassNameId;
	}

	@JSON
	@Override
	public long getFeedClassPK() {
		return _feedClassPK;
	}

	@Override
	public void setFeedClassPK(long feedClassPK) {
		_columnBitmask |= FEEDCLASSPK_COLUMN_BITMASK;

		if (!_setOriginalFeedClassPK) {
			_setOriginalFeedClassPK = true;

			_originalFeedClassPK = _feedClassPK;
		}

		_feedClassPK = feedClassPK;
	}

	public long getOriginalFeedClassPK() {
		return _originalFeedClassPK;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public EntitySocialFeed toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (EntitySocialFeed)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EntitySocialFeedImpl entitySocialFeedImpl = new EntitySocialFeedImpl();

		entitySocialFeedImpl.setClassNameId(getClassNameId());
		entitySocialFeedImpl.setClassPK(getClassPK());
		entitySocialFeedImpl.setFeedClassNameId(getFeedClassNameId());
		entitySocialFeedImpl.setFeedClassPK(getFeedClassPK());

		entitySocialFeedImpl.resetOriginalValues();

		return entitySocialFeedImpl;
	}

	@Override
	public int compareTo(EntitySocialFeed entitySocialFeed) {
		EntitySocialFeedPK primaryKey = entitySocialFeed.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof EntitySocialFeed)) {
			return false;
		}

		EntitySocialFeed entitySocialFeed = (EntitySocialFeed)obj;

		EntitySocialFeedPK primaryKey = entitySocialFeed.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		EntitySocialFeedModelImpl entitySocialFeedModelImpl = this;

		entitySocialFeedModelImpl._originalClassNameId = entitySocialFeedModelImpl._classNameId;

		entitySocialFeedModelImpl._setOriginalClassNameId = false;

		entitySocialFeedModelImpl._originalClassPK = entitySocialFeedModelImpl._classPK;

		entitySocialFeedModelImpl._setOriginalClassPK = false;

		entitySocialFeedModelImpl._originalFeedClassNameId = entitySocialFeedModelImpl._feedClassNameId;

		entitySocialFeedModelImpl._setOriginalFeedClassNameId = false;

		entitySocialFeedModelImpl._originalFeedClassPK = entitySocialFeedModelImpl._feedClassPK;

		entitySocialFeedModelImpl._setOriginalFeedClassPK = false;

		entitySocialFeedModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<EntitySocialFeed> toCacheModel() {
		EntitySocialFeedCacheModel entitySocialFeedCacheModel = new EntitySocialFeedCacheModel();

		entitySocialFeedCacheModel.classNameId = getClassNameId();

		entitySocialFeedCacheModel.classPK = getClassPK();

		entitySocialFeedCacheModel.feedClassNameId = getFeedClassNameId();

		entitySocialFeedCacheModel.feedClassPK = getFeedClassPK();

		return entitySocialFeedCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{classNameId=");
		sb.append(getClassNameId());
		sb.append(", classPK=");
		sb.append(getClassPK());
		sb.append(", feedClassNameId=");
		sb.append(getFeedClassNameId());
		sb.append(", feedClassPK=");
		sb.append(getFeedClassPK());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("com.liferay.share.model.EntitySocialFeed");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>classNameId</column-name><column-value><![CDATA[");
		sb.append(getClassNameId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>classPK</column-name><column-value><![CDATA[");
		sb.append(getClassPK());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>feedClassNameId</column-name><column-value><![CDATA[");
		sb.append(getFeedClassNameId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>feedClassPK</column-name><column-value><![CDATA[");
		sb.append(getFeedClassPK());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = EntitySocialFeed.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			EntitySocialFeed.class
		};
	private long _classNameId;
	private long _originalClassNameId;
	private boolean _setOriginalClassNameId;
	private long _classPK;
	private long _originalClassPK;
	private boolean _setOriginalClassPK;
	private long _feedClassNameId;
	private long _originalFeedClassNameId;
	private boolean _setOriginalFeedClassNameId;
	private long _feedClassPK;
	private long _originalFeedClassPK;
	private boolean _setOriginalFeedClassPK;
	private long _columnBitmask;
	private EntitySocialFeed _escapedModel;
}